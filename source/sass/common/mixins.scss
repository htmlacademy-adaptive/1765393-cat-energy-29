@use "sass:math";
// для подключения модуля math в scss
@use "variables";

@mixin lg {
  @media (min-width: variables.$lg) {
    @content;
  }
}

// чтобы применить его, надо вызвать:
// @include mixins.lg {
//   font-size: 14px;
// }
//
// &:hover {
//    color: #000000;
// }

//vw
$layout-width: 1980; //указываем ширину макета, от которой вычисляем vw

@function vw($size) {
  @return #{(math.div($size, $layout-width)*100)}vw;
}

@function clampvw($min, $max) {
  @return clamp(#{$min}px, #{(math.div($max, $layout-width)*100)}vw, #{$max}px);
}

// Применение функций vw и clamp
// .dd {
//   font-size: vw(120);  вызываем функцию vw, 120 размер в px из макета, а вставится уже в vw
// }
// .dd {
//   font-size: clampvw(18, 120);
// }
// clamp - резина для текста, он меняется от 18 до 120 при расширении экрана

@mixin container {

  width: 100%;
  max-width: 360px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 20px;
  padding-right: 20px;

  //outline: 1px solid deepskyblue;
  //overflow-x: hidden;

  @include lg {
    --w: #{clampvw(770, 1720)};
    --p: calc((100vw - var(var(--w))) / 2);
    //--p: calc((100vw - 1520px)/2);
    //max-width: $lg;
    max-width: clampvw(770, 1520); // чтобы были пропорциональные поля
  }
}


// # Уменьшим размер шрифта заголовка с 72px до 36px для экранов,
// ширина которых меньше или равна 400px:

//@media all and (max-width: 400px) {
//  .title {
//    font-size: 36px;
//  }
//}

//.title {
//  font-size: 72px;
//}


//  # Позволит изменить размер шрифта на всей странице разом — это единица размера rem (root em),
//которая похожа на em, но вместо сложной цепочки зависимостей по родительским элементам,
//она вычисляется только на основе размера шрифта элемента <html>.
//Для удобства вычислений можно использовать базовый размер шрифта в 10px.
//Таким образом, при изменении размера шрифта корневого элемента, пропорционально изменяются все размеры,
//указанные в rem:

//html {
//    font-size: 10px;
//}

//.header__title {
//  font-size: 7.2rem; /* 72px */
//}

// .header__sub-title {
//     font-size: 4.2rem; /* 42px */
//}

//@media all and (max-width: 400px) {
//    html {
//        font-size: 5px;
//          /*
//             .header__title → 36px
//             .header__sub-title → 21px
//           */
//      }
//  }


// #  Элементы списка растягиваются на всю доступную ширину (с ограничением до 360px)
//и появление горизонтальной полосы прокрутки исключено.

//Сейчас список уже выглядит достаточно хорошо, но есть ещё идея —
//расположить иконки каждого элемента слева от текста, так, чтобы они использовались в качестве маркеров.
//Важно, что такая раскладка должна быть только на мобильных экранах:

//.item {
//    flex-basis: 260px;
//   flex-grow: 1;
//    max-width: 360px;

//    display: flex; /* Каждый элемент, в свою очередь, тоже становится Flex-контейнером. */
//    flex-direction: column; /* Для больших экранов сохраняем расположение иконки сверху. */
//    align-items: flex-start; /* Выравниваем иконку по левому краю. */
//}

//@media screen and (max-width: 400px) { /* Для мобильных экранов. */
//    .item {
//        flex-direction: row; /* Ставим иконку в один ряд с текстом. */
//    }
//}
